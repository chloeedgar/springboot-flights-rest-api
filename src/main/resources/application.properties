spring.datasource.url=jdbc:mysql://localhost:3306/flightsrestapi?useSSL=false&serverTimeZone=UTC

spring.datasource.username=newuser
spring.datasource.password=Passw0rd

server.port=8081

# hibernate properties
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5Dialect

# hibernate ddl auto (create, create-drop, validate, update)
# spring.jpa.hibernate.ddl-auto=update
spring.jpa.hibernate.ddl-auto=create


#Hibernate property values are: create, update, create-drop, validate and none:
#
#create ? Hibernate first drops existing tables, then creates new tables
#update ? the object model created based on the mappings (annotations or XML) is compared with the existing schema, and then Hibernate updates the schema according to the diff. It never deletes the existing tables or columns even if they are no more required by the application
#create-drop ? similar to create, with the addition that Hibernate will drop the database after all operations are completed. Typically used for unit testing
#validate ? Hibernate only validates whether the tables and columns exist, otherwise it throws an exception
#none ? this value effectively turns off the DDL generation

# test case scenarios, create-drop so that you create your schema, your test case adds some mock data, you run your tests, and then during the test case cleanup, the schema objects are dropped, leaving an empty database.
# none in PROD
# update in DEV